{
  "swagger": "2.0",
  "info": {
    "title": "proto/profile/v1/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ProfileService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/v1/generate": {
      "post": {
        "operationId": "ProfileService_GenerateMnemonic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateMnemonicResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/auth/v1/login": {
      "post": {
        "operationId": "ProfileService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/auth/v1/register": {
      "post": {
        "operationId": "ProfileService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterRequest"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/profile/v1": {
      "get": {
        "operationId": "ProfileService_GetProfileByDID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Person"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userDid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProfileService"
        ]
      },
      "put": {
        "operationId": "ProfileService_UpdateProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Person"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateProfileRequest"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/profile/v1/search": {
      "get": {
        "operationId": "ProfileService_SearchDIDsByUsername",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchDIDsByUsernameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Follower": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1GenerateMnemonicResponse": {
      "type": "object",
      "properties": {
        "mnemonic": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "mnemonic": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        }
      }
    },
    "v1Person": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Email."
        },
        "username": {
          "type": "string",
          "description": "User name."
        },
        "numOfPosts": {
          "type": "string",
          "format": "int64"
        },
        "subscribers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Follower"
          }
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Follower"
          }
        },
        "isAvatarExists": {
          "type": "boolean"
        }
      }
    },
    "v1RegisterRequest": {
      "type": "object",
      "properties": {
        "mnemonic": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        }
      }
    },
    "v1RegisterResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        }
      }
    },
    "v1SearchDIDsByUsernameResponse": {
      "type": "object",
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Person"
          }
        }
      }
    },
    "v1UpdateProfileRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name."
        },
        "username": {
          "type": "string",
          "description": "User name."
        },
        "email": {
          "type": "string",
          "description": "User email."
        },
        "image": {
          "type": "string"
        }
      }
    }
  }
}
